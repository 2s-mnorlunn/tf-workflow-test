name: (Prod) TF Apply
run-name: (Prod) TF Apply
 
on:
  workflow_dispatch:

  workflow_call:
    inputs:
      manuallyTriggered:
        type: boolean
        required: true
        description: "Workflow triggered manually"

env:
  tfVersion: "1.11.1"

jobs:
  init: 
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3.1.2
        with:
          terraform_version: $tfVersion

      - name: Output manuallyTriggered input
        run: |
          echo "manuallyTriggered: ${{ inputs.manuallyTriggered }}"
        id: output_manually_triggered

      - name: Current directory
        run: |
          pwd
        id: current_dir

      - name: Current files
        run: |
          ls -la
        id: current_files

      - name: Terraform Init ✍️
        run: |
          terraform init
        id: terraform_init

  plan:
    runs-on: ubuntu-latest
    steps:
      - name: Terraform Plan ✍️
        run: |
          terraform plan -input=false -parallelism=100 -lock=false -out=plan.tfplan
        id: terraform_plan
      
      - name: Output Terraform Plan in Summary 👀
        run: |
          {
            echo '# Successfully ran Terraform Plan for ${{ inputs.terraform_environment }} :rocket:'
            echo ''
            echo '## Workflow Details'
            echo '- Branch: ${{ github.ref }}'
            echo '- Commit: ${{ github.sha }}'
            echo '- Actor: ${{ github.actor }}'
            echo ''
            echo '## Terraform Plan'
            echo '```hcl'
            terraform show -no-color plan.tfplan
            echo '```'
          } >> $GITHUB_STEP_SUMMARY
        id: terraform_plan_summary

  approval:
    if: inputs.manuallyTriggered
    runs-on: ubuntu-latest
    permissions:
      issues: write
    steps:
      - name: Await Manual Approval
        uses: trstringer/manual-approval@v1
        with:
          secret: ${{ github.TOKEN }}
          approvers: ${{ github.actor }} # Dynamically assigns the issue to the user who triggered the workflow
          minimum-approvals: 1
          issue-title: "Manual Approval Required for Terraform Apply"
          issue-body: "Please approve or deny the deployment."
  
  apply:
    runs-on: ubuntu-latest
    steps:
      - name: Terraform Apply without varFile specified
        run: terraform apply -input=false -auto-approve plan.tfplan