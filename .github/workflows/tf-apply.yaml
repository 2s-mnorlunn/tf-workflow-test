name: (Prod) TF Apply
run-name: (Prod) TF Apply
 
on:
  workflow_call:
    inputs:
      manuallyTriggered:
        type: boolean
        required: false
        default: false
        description: "Workflow triggered manually"
      tfVersion:
        type: string
        required: false
        default: "1.11.2"
        description: "Terraform version to use"

permissions:
  issues: write
  contents: read

jobs:
  plan:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3.1.2
        with:
          terraform_version: ${{ inputs.tfVersion }}

      - name: Terraform Init ✍️
        run: |
          terraform init

      - name: Cache Terraform Providers
        uses: actions/cache@v3
        with:
          path: |
            .terraform
            .terraform.lock.hcl
          key: terraform-providers-${{ github.ref_name }}-${{ github.sha }}
          restore-keys: |
            terraform-providers-${{ github.ref_name }}-

      - name: Terraform Plan ✍️
        run: |
          terraform plan -input=false -parallelism=100 -lock=false -out=plan.tfplan
      
      - name: Output Terraform Plan in Summary 👀
        run: |
          {
            echo '# Successfully ran Terraform Plan for ${{ inputs.terraform_environment }} :rocket:'
            echo ''
            echo '## Workflow Details'
            echo '- Branch: ${{ github.ref_name }}'
            echo '- Commit: ${{ github.sha }}'
            echo '- Actor: ${{ github.actor }}'
            echo ''
            echo '## Terraform Plan'
            echo '```hcl'
            terraform show -no-color plan.tfplan
            echo '```'
          } >> $GITHUB_STEP_SUMMARY
        id: terraform_plan_summary

      - name: Cache Terraform Plan
        uses: actions/cache@v3
        with:
          path: |
            plan.tfplan
          key: terraform-plan-${{ github.ref_name }}-${{ github.sha }}
          restore-keys: |
            terraform-plan-${{ github.ref_name }}-

  apply:
    needs: plan
    if: |
      always() &&
      !contains(needs.*.result, 'failure') &&
      !contains(needs.*.result, 'cancelled')
    runs-on: ubuntu-latest
    environment: 'tf-manual' #${{ inputs.manuallyTriggered && 'tf-manual' || 'tf-automatic' }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3.1.2
        with:
          terraform_version: ${{ inputs.tfVersion }}

      - name: Restore Terraform Providers Cache
        uses: actions/cache@v3
        with:
          path: |
            .terraform
            .terraform.lock.hcl
          key: terraform-providers-${{ github.ref_name }}-${{ github.sha }}
          restore-keys: |
            terraform-providers-${{ github.ref_name }}-${{ github.sha }}

      - name: Restore Terraform Plan Cache
        uses: actions/cache@v3
        with:
          path: |
            plan.tfplan
          key: terraform-plan-${{ github.ref_name }}-${{ github.sha }}
          restore-keys: |
            terraform-plan-${{ github.ref_name }}-

      - name: Terraform Apply without varFile specified
        run: terraform apply -input=false -auto-approve plan.tfplan